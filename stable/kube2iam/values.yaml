extraArgs: {}
#   base-role-arn: arn:aws:iam::0123456789:role/
#   default-role: kube2iam-default
#   api-server: ...
#   api-token: ...

extraEnv: {}
#    http_proxy: http://example.com:8080
#    NO_PROXY: localhost,127.0.0.1

host:
  ip: $(HOST_IP)
  iptables: false
  interface: docker0
  port: 8181

prometheus:
  # Port to expose the /metrics endpoint on. If unset, defaults to `host.port`
  # metricsPort: 8181

  serviceMonitor:
    # Create prometheus-operator ServiceMonitor
    enabled: false
    # Interval at which the metrics endpoint is scraped
    interval: 10s
    # Alternative namespace to install the ServiceMonitor in
    namespace: ""

image:
  repository: jtblin/kube2iam
  tag: 0.10.4
  pullPolicy: IfNotPresent
  ## Specific image digest to use in place of a tag. Digest takes precedence over tag if it is defined.
  ## ref: https://kubernetes.io/docs/concepts/configuration/overview/#container-images
  ##
  # digest: sha256:3e75d7e23bd46c97b2573c8232ce35a8bf445bf05ed3022aca558e77db9af110

# AWS Access keys to inject as environment variables
aws:
  secret_key: ""
  access_key: ""
  region: ""

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
##
nodeSelector: {}

## Affinity configuration for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
##
affinity: {}

## Annotations to be added to pods
##
podAnnotations: {}

priorityClassName: ""

podLabels: {}

probe: true

rbac:
  ## If true, create & use RBAC resources
  ##
  create: false

  ## Ignored if rbac.create is true
  ##
  serviceAccountName: default

resources: {}
  # limits:
  #   cpu: 4m
  #   memory: 16Mi
  # requests:
  #   cpu: 4m
  #   memory: 16Mi

## Strategy for DaemonSet updates (requires Kubernetes 1.6+)
## Ref: https://kubernetes.io/docs/tasks/manage-daemon/update-daemon-set/
##
updateStrategy: OnDelete

verbose: false

tolerations: []
